upstream pss_surveys {
  # Path to Puma .sock file.
  server unix:///tmp/puma.sock fail_timeout=0;
}

server {
  listen 80;
  server_name www.ankiety.kostkarubika.org;

  root /home/jonatanklosko/pss_surveys/public;

  try_files $uri @app;

  location ^~ /assets/ {
    gzip_static on; # Use existing .gz files.
    gzip_vary on; # Good article: https://blog.stackpath.com/accept-encoding-vary-important
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml application/rss+xml application/atom+xml application/rdf+xml image/svg+xml;
    expires max; # Filenames include hash digest of their content, so we want to cache them forever.
    add_header Cache-Control public; # Allow anyony for caching the assets.
  }

  location @app {
    # Set some headers so the request information is preserved.
    # See https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching#setting-or-resetting-headers
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    proxy_redirect off; # We pass enough headers for the Rails app to generate proper redirect URLs.
    proxy_pass http://pss_surveys;
  }

  # Use rails error pages.
  error_page 500 502 503 504 /500.html;

  keepalive_timeout 10;
}

# Redirect no-www to www.
server {
  listen 80;
  server_name ankiety.kostkarubika.org;
  return 301 $scheme://www.$server_name$request_uri;
}
